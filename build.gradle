
plugins {
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id "java"
}

def mainClass = "no.stide.fling.Main"
project.version = "1.0.0"

repositories {
    flatDir {
        dirs "libs"
    }
    jcenter()
}

dependencies {
    // implementation fileTree('libs') { include '*.jar' }
    implementation ":jchalk-1.0.0"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
}

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java"]
        }
    }
    test {
        java {
            srcDirs = [
                "src/test/java",
                "src/main/java"
            ]
        }
    }
}

task runMockTests(type: Exec) {
    dependsOn shadowJar
    workingDir "$rootDir"
    commandLine "java", "-jar", "build/libs/fling-${project.version}.jar", "build/classes/java/test"
    ignoreExitValue true
}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
        events "passed", "skipped", "failed"
    }
    // dependsOn runMockTests
}

jar {
    manifest {
        attributes(
            "Main-Class": mainClass,
            "Implementation-Title": project.name,
            "Implementation-Version": project.version
        )
    }
}

shadowJar {
    archiveBaseName = 'fling'
    classifier = ''
    archiveVersion = project.version
    destinationDirectory = file("$rootDir/build/libs")
}

build.finalizedBy {
    shadowJar
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}
